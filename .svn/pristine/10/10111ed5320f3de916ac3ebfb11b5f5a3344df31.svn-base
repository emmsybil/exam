<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.cw.portal.persistence.UserMapper">

	<!-- 查看用户名是否存在 -->
	<select id="judgeUser" resultType="String">
		select user_name from et_user
		where user_name
		=#{userName} or true_name=#{trueName}
	</select>


	<!-- 用户 登录，用户用户登录并获取用户信息 -->
	<select id="getUserByName" resultType="com.cw.common.domain.user.User">
		select a.user_id
		userId,a.user_name
		userName,a.password,a.true_name
		trueName,a.national_id nationalId,
		a.email,a.phone_num
		phoneNum,a.create_time createTime,a.create_by
		createBy,
		a.field_id
		fieldId,a.last_login_time
		lastLoginTime,a.company,a.enabled,department,GROUP_CONCAT(c.authority)
		roles,
		a.national_id nationalId,(select d.dep_id from
		et_user_2_department d where d.user_id=a.user_id) depId from
		et_user
		a,et_user_2_role b,et_role c
		where a.user_id=b.user_id and
		b.role_id=c.id and a.user_name=#{username}

	</select>

	<select id="getClassById" resultType="String">
		select dep_name from
		et_department where dep_id=#{depId}
	</select>
	<!-- User -->
	<insert id="insertUser" useGeneratedKeys="true" keyProperty="userId"
		parameterType="com.cw.common.domain.user.User">
		insert into
		et_user(user_name,password,true_name,national_id,email,phone_num,create_time,create_by,field_id,
		company,department,kindred,emergency_call,enrolledTime,birthday,education,gender,address,age)
		value
		(#{userName},#{password},#{trueName},#{nationalId},#{email},#{phoneNum},#{createTime},#{createBy},#{fieldId},#{company},#{department},#{kindred},#{emergencyCall},
		#{enrolledTime},#{birthday},#{education},#{gender},#{address},#{ago})
	</insert>
	<update id="updateUser" parameterType="com.cw.common.domain.user.User">
		update et_user
		<set>
			<if test="user.userName != null">user_name=#{user.userName},</if>
			<if test="user.password != null and user.password neq ''">password=#{user.password},</if>
			<if test="user.trueName != null">true_name=#{user.trueName},</if>
			<if test="user.nationalId != null">national_id=#{user.nationalId},</if>
			<if test="user.email != null">email=#{user.email},</if>
			<if test="user.phoneNum != null">phone_num=#{user.phoneNum},</if>
			<if test="user.createTime != null">create_time=#{user.createTime},</if>
			<if test="user.createBy != null">create_by=#{user.createBy},</if>
			<if test="user.fieldId != 0">field_id=#{user.fieldId},</if>
			<if test="user.company != null">company=#{user.company},</if>
			<if test="user.department != null">department=#{user.department},</if>
			<if test="user.userId != 0">user_id=#{user.userId}</if>
		</set>
		<where>
			(user_name = #{user.userName} or user_id=#{user.userId})
			<if test="oldpassword != null">
				and password=#{oldpassword}
			</if>
		</where>
	</update>


	<insert id="grantUserRole">
		insert into et_user_2_role(user_id,role_id) value
		(#{userId},#{roleId})
	</insert>

	<!-- group -->
	<select id="getGroupListByUserId" resultType="com.cw.common.domain.user.Group">
		select id
		groupId,group_name groupName,create_time createTime,is_default
		defaultt
		from et_group where user_id=#{userId}
	</select>

	<insert id="addUserGroup">
		replace into et_user_2_group(user_id,group_id) values
		(#{userId},#{groupId})
	</insert>

	<delete id="deleteUserGroup">
		delete from et_user_2_group where user_id=#{userId}
		and group_id in
		(select b.id from et_group b where b.id=#{groupId} and
		b.user_id=#{managerId})
	</delete>

	<!-- Role -->
	<select id="getRoleList" resultType="com.cw.common.domain.user.Role">
		select id
		roleId,authority,name roleName,code roleCode from et_role
	</select>

	<!-- Department -->
	<select id="getDepList" resultType="com.cw.common.domain.user.Department">
		select dep_id depId,dep_name
		depName,memo from et_department
	</select>

	<insert id="addUser2Dep">
		insert into et_user_2_department(user_id,dep_id)
		values (#{userId},#{depId})
	</insert>
	<delete id="deleteUser2Dep">
		delete from et_user_2_department where
		user_id=#{userId}
	</delete>
</mapper>